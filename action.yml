name: Build marketplace images
description: |
  Building disk images for
    1. DigitalOcean
    2. AWS (AMI)
    .. and more


inputs:
  tag:
    description: |
      Rocket.Chat version tag
    required: true
  digitalocean-token:
    required: false
    description: DigitalOcean token
  aws-key-id:
    required: false
    description: AWS key id
  aws-secret-key:
    required: false
    description: AWS secret key
  source:
    description: Packer source
    required: true

runs:
  using: composite
  steps:
    - name: Check if we should run this action or not
      shell: bash
      run: |
        passed_tag=${{ inputs.tag }}
        echo "passed_tag: $passed_tag"
        current_released=$(
            git -c 'versionsort.suffix=-' ls-remote -t --exit-code --refs --sort=-v:refname "https://github.com/RocketChat/rocketchat-packer" '*' |
            awk -F/ '{ print $NF; exit }'
        )
        echo "current_released: $current_released"
        is_gt() {
          local v1=(${1//./ })
          local v2=(${2//./ })
          (( ${v1[0]} > ${v2[0]} )) && return 0
          (( ${v1[1]} > ${v2[1]} )) && return 0
          (( ${v1[2]} > ${v2[2]} )) && return 0
          return 1
        }
        is_gt $passed_tag $current_released

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: RocketChat/rocketchat-packer

    - name: Validate template
      uses: hashicorp/packer-github-actions@master
      with:
        command: validate
        arguments: -syntax-only
        target: config.pkr.hcl

    - name: Initialize plugins
      uses: hashicorp/packer-github-actions@master
      with:
        command: init
        target: config.pkr.hcl

    - name: Build images
      uses: hashicorp/packer-github-actions@master
      with:
        command: build
        arguments: ${{ format('-color=false -on-error=cleanup -only={0}', inputs.source) }}
        target: config.pkr.hcl
      env:
        PACKER_LOG: '1'
        PKR_VAR_rocketchat_version: ${{ inputs.tag }}
        PKR_VAR_do_token: ${{ inputs.digitalocean-token }}
        PKR_VAR_aws_key_id: ${{ inputs.aws-key-id }}
        PKR_VAR_aws_secret_key: ${{ inputs.aws-secret-key }}

